<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.with_me.mapper.AdminMapper">
	<!-- 동적 SQL 기능 활용하여 SQL 구문을 다르게 구성 가능 
		FROM 절 이후의 검색타입과 검색어에 따른 WHERE절을 다르게 구성
		
		[동적 SQL문]
		- 어떤 조건에 따라 실행할 SQL 문장을 다르게 구성한 SQL 구문
		- JSTL에서 조건에 따라 문장을 다르게 실행하는 것과 거의 동일
			<c:if>, <c:choose><c:when><c:otherwise> => c: 제거하면 거의 동일
			
		조건1) 검색어(searchKeyword)가 널스트링이 아닐 때 WHERE 절 추가 => if 태그 필요
		조건2) 검색어가 있을 경우 WHERE 절 뒷 부분에 검색타입(searchType)에 따라 컬럼명 다르게 검색
				=> 복수개의 조건에 따른 동적 SQL 문을 작성하기 위해 choose, when, otherwise 태그 필요
				
		=> 결론> 테이블명, LIKE 절 등에 전달되는 데이터는 ${} 사용하고
		외부로부터 입력받는 대부분의 데이터는 #{} 사용하자!
		=> 결론2> LIKE절에 % 결합 시 CONCAT() 함수 활용하자
	
	 -->
	<!--  1. 검색어(searchKeyword)가 널스트리잉 아닐 때 검색어를 추가하기 위한 WHERE 절 추가
	=> 검색어 데이터는 searchKeyword 변수에 저장되어 있으므로 변수명 그대로 활용
	=> 자바 문법과 동일하게 equals() 메서드를 통해 문자열 비교 수행 -->
	
	<!-- 회원 목록 개수 조회 -->
	<select id="selectMemberListCount" resultType="int">
		SELECT COUNT(*)
		FROM member
		<if test="!searchKeyword.equals('')">
			WHERE 
				mem_idx like concat('%',#{searchKeyword},'%')
				or mem_email like concat('%',#{searchKeyword},'%')
				or mem_name like concat('%',#{searchKeyword},'%')
				or mem_sign_date like concat('%',#{searchKeyword},'%')
				or mem_status like concat('%',#{searchKeyword},'%')
		</if>
	</select>
	
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" resultType="member">
		SELECT * 
		FROM member
		<if test="!searchKeyword.equals('')">
			WHERE 
				mem_idx like concat('%',#{searchKeyword},'%')
				or mem_email like concat('%',#{searchKeyword},'%')
				or mem_name like concat('%',#{searchKeyword},'%')
				or mem_sign_date like concat('%',#{searchKeyword},'%')
				or mem_status like concat('%',#{searchKeyword},'%')
		</if>
		ORDER BY
			mem_isAdmin DESC
			, mem_idx DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 관리자 권한 부여 / 해제 -->
	<!-- 파라미터로 받은 MemberVO 객체의 mem_isAdmin 값을 활용하여 -->
	<!-- 일반 사용자에게는 관리자 권한 부여, 관리자는 권한 해제 -->
	<update id="updateAdminAuth">
		UPDATE member
		SET 
			<choose>
				<when test="mem_isAdmin == 0">
					mem_isAdmin = 1
				</when>
				<otherwise>
					mem_isAdmin = 0
				</otherwise>
			</choose>
		WHERE mem_email = #{mem_email}
	</update>
	
	<!-- 후원내역 개수 조회 -->
	<select id="selectSponsorshipHistoryListCount" resultType="int">
		SELECT COUNT(*)
		FROM project_payment pp
		JOIN pay_method pm
		ON pp.pro_funding_pay_method_idx = pm.pay_method_idx
		JOIN funding_user fu
		ON fu.funding_idx = pp.pro_funding_idx
		JOIN project_info pi
		ON pi.project_idx = fu.funding_project_idx
		WHERE pro_mem_email = #{member.mem_email}
		<if test="!searchKeyword.equals('')">
			AND (
				pi.project_code like concat('%',#{searchKeyword},'%')
				or pi.project_title like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_status like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_date like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_amt like concat('%',#{searchKeyword},'%')
				or pm.pay_method_name like concat('%',#{searchKeyword},'%')
			)
		</if>
	</select>
	
	<!-- 후원내역 조회 -->
	<select id="selectSponsorshipHistory" resultType="Map">
		SELECT * 
		FROM project_payment pp
		JOIN pay_method pm
		ON pp.pro_funding_pay_method_idx = pm.pay_method_idx
		JOIN funding_user fu
		ON fu.funding_idx = pp.pro_funding_idx
		JOIN project_info pi
		ON pi.project_idx = fu.funding_project_idx
		WHERE pro_mem_email = #{member.mem_email}
		<if test="!searchKeyword.equals('')">
			AND (
				pi.project_code like concat('%',#{searchKeyword},'%')
				or pi.project_title like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_status like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_date like concat('%',#{searchKeyword},'%')
				or pp.pro_pay_amt like concat('%',#{searchKeyword},'%')
				or pm.pay_method_name like concat('%',#{searchKeyword},'%')
			)
		</if>
		ORDER BY
			pp.pro_pay_idx DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 구매내역 개수 조회 -->
	<select id="selectPurchaseHistoryListCount" resultType="int">
		SELECT COUNT(*)
		FROM product_payment pp
		JOIN pay_method pm
		ON pp.order_pay_method_idx = pm.pay_method_idx
		JOIN product_info pi
		ON pi.product_idx = pp.product_idx
		WHERE order_mem_email = #{member.mem_email}
		<if test="!searchKeyword.equals('')">
			AND (
				pi.product_code like concat('%',#{searchKeyword},'%')
				or pi.product_name like concat('%',#{searchKeyword},'%')
				or pp.order_pay_status like concat('%',#{searchKeyword},'%')
				or pp.order_pay_date like concat('%',#{searchKeyword},'%')
				or pp.order_pay_cost like concat('%',#{searchKeyword},'%')
				or pm.pay_method_name like concat('%',#{searchKeyword},'%')
			)
		</if>
	</select>
	
	<!-- 구매내역 조회 -->
	<select id="selectPurchaseHistory" resultType="Map">
		SELECT * 
		FROM product_payment pp
		JOIN pay_method pm
		ON pp.order_pay_method_idx = pm.pay_method_idx
		JOIN product_info pi
		ON pi.product_idx = pp.product_idx
		WHERE order_mem_email = #{member.mem_email}
		<if test="!searchKeyword.equals('')">
			AND (
				pi.product_code like concat('%',#{searchKeyword},'%')
				or pi.product_name like concat('%',#{searchKeyword},'%')
				or pp.order_pay_status like concat('%',#{searchKeyword},'%')
				or pp.order_pay_date like concat('%',#{searchKeyword},'%')
				or pp.order_pay_cost like concat('%',#{searchKeyword},'%')
				or pm.pay_method_name like concat('%',#{searchKeyword},'%')
			)
		</if>
		ORDER BY
			pp.order_product_idx DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 프로젝트 개수 조회 -->
	<select id="selectProjectListCount" resultType="int">
		SELECT COUNT(*)
		FROM project_info
		WHERE 
		<choose>
			<when test="projectStatus.equals('심사중')">
				project_status = '심사중'
			</when>
			<when test="projectStatus.equals('승인')">
				project_status = '승인'
				AND funding_end_date &gt; now()
			</when>
			<when test="projectStatus.equals('종료')">
				project_status = '승인'
				AND funding_end_date &lt; now()
			</when>
		</choose>
		<if test="!searchKeyword.equals('')">
			AND (
				project_code like concat('%',#{searchKeyword},'%')
				or project_title like concat('%',#{searchKeyword},'%')
				or project_category like concat('%',#{searchKeyword},'%')
				or project_category_detail like concat('%',#{searchKeyword},'%')
				or target_price like concat('%',#{searchKeyword},'%')
				or funding_start_date like concat('%',#{searchKeyword},'%')
				or funding_end_date like concat('%',#{searchKeyword},'%')
			)
		</if>
	</select>
	
	<!-- 프로젝트 목록 조회 -->
	<select id="selectProjectList" resultType="project">
		SELECT * 
		FROM project_info
		WHERE 
		<choose>
			<when test="projectStatus.equals('심사중')">
				project_status = '심사중'
			</when>
			<when test="projectStatus.equals('승인')">
				project_status = '승인'
				AND funding_end_date &gt; now()
			</when>
			<when test="projectStatus.equals('종료')">
				project_status = '승인'
				AND funding_end_date &lt; now()
			</when>
		</choose>
		<if test="!searchKeyword.equals('')">
			AND (
				project_code like concat('%',#{searchKeyword},'%')
				or project_title like concat('%',#{searchKeyword},'%')
				or project_category like concat('%',#{searchKeyword},'%')
				or project_category_detail like concat('%',#{searchKeyword},'%')
				or target_price like concat('%',#{searchKeyword},'%')
				or funding_start_date like concat('%',#{searchKeyword},'%')
				or funding_end_date like concat('%',#{searchKeyword},'%')
			)
		</if>
		ORDER BY
			project_idx DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<!-- 프로젝트 상태 변경 -->
	<update id="updateProjectStatus">
		UPDATE project_info
		<choose>
			<when test="status.equals('승인')">
				SET project_status = '승인'
			</when>
			<when test="status.equals('거부')">
				SET project_status = '반려'
			</when>
			<when test="status.equals('취소')">
				SET project_status = '취소'
			</when>
		</choose>
		WHERE project_idx = #{project.project_idx}
	</update>
	
	<!-- 프로젝트 취소 신청여부 조회 -->
	<select id="selectProjectCancel" resultType="projectCancel">
		SELECT * 
		FROM project_cancel
		WHERE project_idx = #{project_idx}
	</select>
	
	<!-- 프로젝트 취소 승인여부 변경 -->
	<update id="updateProjectCancelStatus">
		UPDATE project_cancel
		SET project_cancel_status = '취소승인'
		WHERE project_idx = #{project.project_idx}
	</update>
</mapper>