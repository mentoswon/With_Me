<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- 
엑세스토큰 및 사용자 정보를 관리할 bank_user_info 테이블 정의
create table bank_user_info(
	id varchar(16) primary key,
    access_token varchar(400) unique,
    refresh_token varchar(400) unique,
    user_seq_no varchar(10) unique,
    user_ci varchar(100) unique,
    foreign key (id) references member(id) on delete cascade
);
 -->
<mapper namespace="com.itwillbs.with_me.mapper.BankMapper">
	<select id="selectId" resultType="String">
		SELECT fin_mem_email 
		FROM fintech_user_info
		WHERE 
			fin_mem_email = #{id} 
	</select>


	<!-- 엑세스 정보 추가 -->
	<insert id="insertAccessToken">
		INSERT INTO fintech_user_info
		VALUES (
			null
			, #{id}
			, #{token.access_token}
			, #{token.refresh_token}
			, #{token.user_seq_no}
			, #{token.user_ci}
			, #{token.fintech_use_num}       -- 임시: 사용자 계좌가 1개라는 전제하에 계좌번호 대신 사용자 번호 저장 (원래는 계좌별로 핀테크 이용번호가 여러개임)
		)
	</insert>
	
	<!-- 엑세스 정보 갱신 -->
	<update id="updateAccessToken">
		UPDATE fintech_user_info
		SET 
			access_token = #{token.access_token}
			, refresh_token = #{token.refresh_token}
		WHERE 
			fin_mem_email = #{id}
	</update>
	
	<!-- 로그인 시 엑세스 정보 조회하여 저장하도록 처리해야하니까 일단 조회부터 --> 
	<!-- member 테이블도 조회하여 name 도 가져와야함 !~ --> 
	<select id="selectBankUserInfo" resultType="bankToken">
		SELECT * 
		FROM bank_user_info AS b
		LEFT JOIN member AS m
		ON b.id = m.id
		WHERE b.id = #{id}
	</select>
	
	<!-- 관리자 엑세스 토큰 가져오기 -->
	<!-- 위의 핀테크 사용자 정보 조회와 다른점: where 절 id 값만 다름. 위의 메서드 재사용해도 됨 -->
	<select id="selectAdminAccessToken" resultType="bankToken">
		SELECT *
		FROM bank_user_info
		WHERE id = 'admin'
	</select>
</mapper>