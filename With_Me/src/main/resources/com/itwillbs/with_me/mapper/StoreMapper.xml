<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.itwillbs.with_me.mapper.StoreMapper">
	<!-- 전체 게시물 수 조회(검색 기능 추가) -->
	<!-- 검색어에 따른 결과 게시물 수 조회 -> 페이징 때문 -->
	<select id="selectBoardListCount" resultType="int">
		SELECT count(*)
		FROM product_info
		WHERE 
		<choose>
			<when test="!searchKeyword.equals('')">
				product_category like concat('%',#{searchKeyword},'%') 	
				or product_category_detail like concat('%',#{searchKeyword},'%') 	
				or product_name like concat('%',#{searchKeyword},'%') 	
				or product_description like concat('%',#{searchKeyword},'%') 	
				or product_category_detail like concat('%',#{searchKeyword},'%') 
			</when>
			<otherwise>
				<choose>
					<when test="productCategory_detail == null">
						product_category = #{productCategory}
						AND	product_status = '1'
					</when>
					<otherwise>
						product_category = #{productCategory}
						AND product_category_detail = #{productCategory_detail}
						AND	product_status = '1'
					</otherwise>
				</choose>
			</otherwise>
		</choose>
	</select>
	
	<!-- 상품 목록 표출 -->
	<select id="selectStoreList" resultType="hashmap">
		SELECT *
		FROM product_info 
		WHERE
		<choose>
			<when test="!searchKeyword.equals('')">
				product_category like concat('%',#{searchKeyword},'%')
				or product_category_detail like concat('%',#{searchKeyword},'%')
				or product_name like concat('%',#{searchKeyword},'%') 	
				or product_description like concat('%',#{searchKeyword},'%') 	
				 
			</when>
			<otherwise>
				<choose>
					<when test="productCategory_detail == null">
						product_category = #{productCategory}
						AND product_status = '1'
					</when>
					<otherwise>
						product_category = #{productCategory}
						AND product_category_detail = #{productCategory_detail}
						AND product_status = '1'
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		limit
			#{startRow}
			, #{listLimit}
	
	
	</select>
	
	<select id="selectStoreListAll" resultType="hashmap">
		SELECT *
		FROM product_info
		WHERE product_category = '푸드'
	
	
	</select>
	
	
	
	
	
	
	
	<!-- 상품 상세정보 가져오기 -->
	<select id="selectProduct" resultType="hashmap">
		SELECT *
		
		FROM product_info
		WHERE product_code = #{product_code}
		
	</select>
	
	
<!-- ============================================================ -->	
	<!-- 좋아요 했는지 판단 후 가져가기 -->
	<select id="selectIsLike" resultType="like">
		SELECT *
		FROM like_
		WHERE
			like_mem_email = #{like_mem_email}
			AND like_product_code = #{like_product_code}
			AND like_status = 'Y'
		
	</select>
	
		<!-- 좋아요 한 적 있는지 확인부터 -->
	<select id="selectLikeCount" resultType="int">
		SELECT COUNT(*)
		FROM like_
		WHERE 
			like_product_code = #{like_product_code}
			AND like_mem_email = #{like_mem_email}
	</select>
	
	<!--  좋아요 기록 있는데 N 이니까 Y로 status 변경 -->
	<update id="updateLike">
		UPDATE like_
		SET like_status = 'Y'
		WHERE 
			like_product_code = #{like_product_code}
			AND like_mem_email = #{like_mem_email}
			AND like_status = 'N'
	</update>
	
	<!-- 좋아요 등록 -->
	<insert id="insertLike">
		INSERT INTO like_
		VALUES (
			null
			, #{like_mem_email}
			, #{like_product_code}
			, null
			, 'Y'
		)
	</insert>
	
	<!--  좋아요 취소 -->
	<update id="cancleLike">
		UPDATE like_
		SET like_status = 'N'
		WHERE 
			like_product_code = #{like_product_code}
			AND like_mem_email = #{like_mem_email}
			AND like_status = 'Y'
	</update>
	
<!-- ===================================================== -->
	
	
	
	<!-- 사용자 배송지 가져오기 -->
	<select id="selectUserAddress" resultType="address">
		SELECT *
		FROM user_address
		WHERE address_mem_email = #{mem_email}
		ORDER BY address_is_default DESC 
				, address_receiver_name
	</select>

	<!-- 기본 배송지 여부 확인 -->
	<select id="selectAddressIsDefault" resultType="int">
		SELECT COUNT(*)
		FROM user_address
		WHERE address_mem_email = #{id}
		AND address_is_default = 'Y';
	</select>
	
	<!-- 기본 배송지 변경 (원래 기본 배송지였던거를 N으로) -->
	<update id="updateDefaultAddress">
		UPDATE user_address
		SET address_is_default = 'N'
		WHERE address_mem_email = #{id}
		AND address_is_default = 'Y';
	</update>
	
	<!-- 1. 기본 배송지 변경하고 새로운 기본배송지 설정 -->
	<insert id="insertNewDefaultAddress">
		INSERT INTO user_address 
		VALUES (
			null
			,#{address_mem_email}
			,#{address_receiver_name}
			,#{address_post_code}
			,#{address_main}
			,#{address_sub}
			,#{address_receiver_tel}
			,'Y'
		)
	</insert>
	
	<!-- 2. 나머지 배송지 등록 -->
	<insert id="insertNewAddress">
		INSERT INTO user_address 
		VALUES (
			null
			,#{address_mem_email}
			,#{address_receiver_name}
			,#{address_post_code}
			,#{address_main}
			,#{address_sub}
			,#{address_receiver_tel}
			<choose>
				<when test="#{address_is_default == null}">
				,'N'
				</when>
				<otherwise>
				, 'Y'
				</otherwise>
			</choose>			
		)
	</insert>
	
	<delete id="deleteAddress">
		DELETE FROM user_address
		WHERE address_idx = #{address_idx}
	</delete>








</mapper>